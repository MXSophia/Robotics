// generated by mBlock5 for mBot Ranger
// codes make you happy

#include <Arduino.h>
#include <Wire.h>
#include <SoftwareSerial.h>
#include <MeAuriga.h>

MeUltrasonicSensor ultrasonic_10(10);
MeRGBLed rgbled_0(0, 12);
MeLightSensor lightsensor_12(12);

void _delay(float seconds) {
  if(seconds < 0.0){
    seconds = 0.0;
  }
  long endTime = millis() + seconds * 1000;
  while(millis() < endTime) _loop();
}

void setup() {
  rgbled_0.setpin(44);
  rgbled_0.fillPixelsBak(0, 2, 1);
  randomSeed((unsigned long)(lightsensor_12.read() * 123456));
  while(1) {
      if(ultrasonic_10.distanceCm() < 5){

          rgbled_0.setColor(1,255,0,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 20){

          rgbled_0.setColor(2,255,0,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 35){

          rgbled_0.setColor(3,255,0,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 50){

          rgbled_0.setColor(4,255,0,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 65){

          rgbled_0.setColor(5,255,161,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 80){

          rgbled_0.setColor(6,255,161,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 95){

          rgbled_0.setColor(7,255,161,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 110){

          rgbled_0.setColor(8,255,161,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 125){

          rgbled_0.setColor(9,4,255,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 140){

          rgbled_0.setColor(10,4,255,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 155){

          rgbled_0.setColor(11,4,255,0);
          rgbled_0.show();

      }
      if(ultrasonic_10.distanceCm() > 170){

          rgbled_0.setColor(0,4,255,0);
          rgbled_0.show();

      }

      _loop();
  }

}

void _loop() {
}

void loop() {
  _loop();
}
